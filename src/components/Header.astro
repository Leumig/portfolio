---
import ThemeToggle from "./ThemeToggle.astro";

const navItems = [
  {
    title: "Inicio",
    label: "inicio",
    href: "#inicio",
  },
  {
    title: "Habilidades",
    label: "habilidades",
    href: "#habilidades",
  },
  {
    title: "Proyectos",
    label: "proyectos",
    href: "#proyectos",
  },
  {
    title: "Sobre MÃ­",
    label: "sobre-mi",
    href: "#sobre-mi",
  },
  {
    title: "Contacto",
    label: "contacto",
    href: "#contacto",
  },
];
---

<header
  class="fixed top-0 z-10 flex items-center justify-center w-full mx-auto mt-2"
>
  <nav
    class="px-12 gap-4 mt-2 min-w-fit rounded-2xl flex justify-center items-center
    font-bold text-gray-600 dark:text-gray-200"
  >
    {
      navItems.map((link) => (
        <a
          class="relative block px-2 py-2 transition 
          hover:text-navbar-primary dark:hover:text-navbar-secondary"
          aria-label={link.label}
          href={link.href}
        >
          {link.title}
        </a>
      ))
    }
    <ThemeToggle />
  </nav>
</header>

<!-- Navbar color change function -->
<script>
  // Intersection Observer API to change the color of the navbar links
  document.addEventListener("DOMContentLoaded", () => {
    const sections = document.querySelectorAll<HTMLElement>("section");
    const navItems = document.querySelectorAll<HTMLAnchorElement>("header nav a");

    // Function to change the color of the navbar items
    const changeColor = (entries: IntersectionObserverEntry[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add(
                "text-navbar-primary",
                "dark:text-navbar-secondary"
              );
            } else {
              item.classList.remove(
                "text-navbar-primary",
                "dark:text-navbar-secondary"
              );
            }
          });
        }
      });
    };

    // Create an observer with a callback "changeColor" function
    const observer = new IntersectionObserver(changeColor, {
      root: null,
      rootMargin: "0px",
      threshold: 0.8, // When the section is 80% visible
    });

    // Observe each section of the page
    sections.forEach((section) => {
      observer.observe(section);
    });

    // Optimization function (stop observing when the tab is not visible)
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect();
      } else {
        sections.forEach((section) => {
          observer.observe(section);
        });
      }
    };
  });
</script>

<!-- Shading Navbar Animation -->
<style>
  nav {
    animation: nav-shadown 2s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

  nav {
    @apply bg-white/90 dark:bg-navbar-dark-bg;
  }

  @keyframes nav-shadown {
    0% {
      @apply bg-white/0 dark:bg-gray-800/0;
    }
    100% {
      @apply shadow-lg backdrop-blur;
    }
  }
</style>